Great! Here's how to build a **Streamlit app that logs costs to a Google Sheet**, step-by-step.

---

## ‚úÖ 1. Set Up Google Sheet

1. Create a new Google Sheet (e.g., name it `HouseholdCosts`).
2. Add headers in the first row: `Name`, `Item`, `Amount`, `Date`.

---

## ‚úÖ 2. Create a Google Cloud Project and Service Account

1. Go to: [https://console.cloud.google.com/](https://console.cloud.google.com/)
2. Create a new project.
3. Enable the **Google Sheets API** and **Google Drive API**.
4. Go to **IAM & Admin > Service Accounts**:

   * Create a service account.
   * Create a key (choose JSON).
   * Save the JSON key‚Äî**this will go into Streamlit secrets**.
5. In your Google Sheet, click **Share** and share it with the **service account email** (ends in `@<project-id>.iam.gserviceaccount.com`).

---

## ‚úÖ 3. Add Secrets to Streamlit

In your Streamlit Cloud project:

1. Click "Settings" ‚Üí "Secrets".
2. Paste your JSON file contents under a key like `gcp_service_account`.

Example:

```toml
[gcp_service_account]
type = "service_account"
project_id = "your-project-id"
private_key_id = "xxx"
private_key = "-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n"
client_email = "your-service-account@your-project.iam.gserviceaccount.com"
...
```

---

## ‚úÖ 4. Streamlit App Code (`app.py`)

```python
import streamlit as st
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# Google auth setup
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(st.secrets["gcp_service_account"], scope)
client = gspread.authorize(creds)

# Connect to Google Sheet
sheet = client.open("HouseholdCosts").sheet1

st.title("üè† Household Cost Tracker")

# Input fields
name = st.selectbox("Name", ["Alice", "Bob", "Carol", "Dave"])
item = st.text_input("Item")
amount = st.number_input("Amount (‚Ç¨)", min_value=0.0, format="%.2f")
date = st.date_input("Date", value=datetime.today())

if st.button("Submit Expense"):
    if name and item and amount:
        sheet.append_row([name, item, amount, date.strftime("%Y-%m-%d")])
        st.success("üíæ Cost saved to Google Sheets!")

# Optionally show existing entries
if st.checkbox("Show existing entries"):
    records = sheet.get_all_records()
    st.write(records)
```

---

‚úÖ You now have a cost tracker shared across your household, with real-time cloud storage using Google Sheets.

Would you like to add simple password protection next (e.g., basic login)?
